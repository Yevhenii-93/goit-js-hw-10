{"version":3,"file":"2-snackbar.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n// Напиши скрипт, який після сабміту форми створює проміс. В середині колбека цього промісу через вказану користувачем кількість мілісекунд проміс має виконуватися (при fulfilled) або відхилятися (при rejected), залежно від обраної опції в радіокнопках. Значенням промісу, яке передається як аргумент у методи resolve/reject, має бути значення затримки в мілісекундах.\n\n// Створений проміс треба опрацювати у відповідних для вдалого/невдалого виконання методах.\n\n// Якщо проміс виконується вдало, виводь у консоль наступний рядок, де delay — це значення затримки виклику промісу в мілісекундах.\n\n// `✅ Fulfilled promise in ${delay}ms`;\n\n// Якщо проміс буде відхилено, то виводь у консоль наступний рядок, де delay — це значення затримки промісу в мілісекундах.\n\n// `❌ Rejected promise in ${delay}ms`\n\nconst inputDelay = document.querySelector('input[name=\"delay\"]');\nconst inputFulfilled = document.querySelector('input[value=\"fulfilled\"]');\nconst inputRejected = document.querySelector('input[value=\"rejected\"]');\nconst btnSubmit = document.querySelector('button[type=\"submit\"]');\n\nbtnSubmit.addEventListener('click', sendDelay);\nfunction sendDelay(event) {\n  event.preventDefault();\n\n  const delayValue = Number(inputDelay.value);\n  const isInputFulfilled = inputFulfilled.checked;\n  const isInputRejected = inputRejected.checked;\n\n  return userDelayValue(delayValue, isInputFulfilled, isInputRejected);\n}\n\nfunction userDelayValue(delayValue, isInputFulfilled, isInputRejected) {\n  let promise = new Promise((resolve, reject) => {\n    if (isInputFulfilled) {\n      setTimeout(() => {\n        resolve();\n      }, delayValue);\n    }\n    if (isInputRejected) {\n      setTimeout(() => {\n        reject();\n      }, delayValue);\n    }\n  });\n\n  promise\n    .then(resolve => {\n      iziToast.success({\n        color: 'green',\n        position: 'topRight',\n        message: `✅ Fulfilled promise in ${delayValue}ms`,\n      });\n    })\n    .catch(reject => {\n      iziToast.error({\n        color: 'red',\n        position: 'topRight',\n        message: `❌ Rejected promise in ${delayValue}ms`,\n      });\n    });\n}\n"],"names":["inputDelay","inputFulfilled","inputRejected","btnSubmit","sendDelay","event","delayValue","isInputFulfilled","isInputRejected","userDelayValue","resolve","reject","iziToast"],"mappings":"wIAeA,MAAMA,EAAa,SAAS,cAAc,qBAAqB,EACzDC,EAAiB,SAAS,cAAc,0BAA0B,EAClEC,EAAgB,SAAS,cAAc,yBAAyB,EAChEC,EAAY,SAAS,cAAc,uBAAuB,EAEhEA,EAAU,iBAAiB,QAASC,CAAS,EAC7C,SAASA,EAAUC,EAAO,CACxBA,EAAM,eAAc,EAEpB,MAAMC,EAAa,OAAON,EAAW,KAAK,EACpCO,EAAmBN,EAAe,QAClCO,EAAkBN,EAAc,QAEtC,OAAOO,EAAeH,EAAYC,EAAkBC,CAAe,CACrE,CAEA,SAASC,EAAeH,EAAYC,EAAkBC,EAAiB,CACvD,IAAI,QAAQ,CAACE,EAASC,IAAW,CACzCJ,GACF,WAAW,IAAM,CACfG,GACD,EAAEJ,CAAU,EAEXE,GACF,WAAW,IAAM,CACfG,GACD,EAAEL,CAAU,CAEnB,CAAG,EAGE,KAAKI,GAAW,CACfE,EAAS,QAAQ,CACf,MAAO,QACP,SAAU,WACV,QAAS,0BAA0BN,CAAU,IACrD,CAAO,CACP,CAAK,EACA,MAAMK,GAAU,CACfC,EAAS,MAAM,CACb,MAAO,MACP,SAAU,WACV,QAAS,yBAAyBN,CAAU,IACpD,CAAO,CACP,CAAK,CACL"}